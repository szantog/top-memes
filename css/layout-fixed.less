/**
 * @file
 * Layout Styling (DIV Positioning)
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout is based on the Zen Columns layout method.
 *   http://drupal.org/node/201428
 *
 * Only CSS that affects the layout (positioning) of major elements should be
 * listed here.  Such as:
 *   display, position, float, clear, width, height, min-width, min-height
 *   margin, border, padding, overflow
 */

@import "../less-framework/base.less";
/*
 * Body
 */
body {
}

#main-wrapper,
.region-bottom {
  /*
   * If you want to make the page a fixed width and centered in the viewport,
   * this is the standards-compliant way to do that. See also the ie6.css file
   * for the necessary IE5/IE6quirks hack to center a div.
   */
  margin-left: 20px;
  //max-width: @page-width;
}

#page {
}

#site-name-with-sec {
  max-width: @page-width;
}
/*
 * Header
 */
#header {
  #name-and-slogan {
    height: @header-height;
    pleft(30px);
  }
}

#header .section {
}

.region-header {
}

/*
 * Main (container for everything else)
 */
#main-wrapper {
  relative;
  mtop(20px);
}

#main {
}

/*
 * Content
 */
#content,
.no-sidebars #content {
  left(0); /* LTR */
  //width: @page-width;
  //margin-right: -1 * @page-width; /* LTR */ /* Negative value of #content's width + left margin. */
  nopadding /* DO NOT CHANGE. Add padding or margin to #content .section. */

  .section {
    nomarding;
  }
  relative;
}

.page-node #content {
  max-width: 490px;
}

#sidebars {
  width: 460px;
}

/*
 * Navigation
 */
#navigation {
  left(0);
  width: 99%;
  margin-right: -100%; /* LTR */ /* Negative value of #navigation's width + left margin. */
  nopadding; /* DO NOT CHANGE. Add padding or margin to #navigation .section. */
  height: @navigation-height; /* The navigation can have any arbritrary height. We picked one
                    that is the line-height plus 1em: 1.3 + 1 = 2.3
                    Set this to the same value as the margin-top below. */
}

.with-navigation {
  #content,
  .region-sidebar-first,
  .region-sidebar-second {
    mtop(@navigation-height); /* Set this to the same value as the navigation height above. */
  }
}

#navigation .section {
}

/*
 * Sidebars
 */
.sidebar {
  left(0);
  nopadding; /* DO NOT CHANGE. Add padding or margin to .region-sidebar-first .section. */
}
/*
 * First sidebar
 */
.region-sidebar-first {
  width: @sidebar-first-width;
  //margin-left: -1 * @sidebar-first-width; /* LTR */ /* Negative value of .region-sidebar-first's width + left margin. */
}

.region-sidebar-first .section {
  margin: 0 15px;
  padding: 0;
}

/*
 * Second sidebar
 */
.region-sidebar-second {
  width: @sidebar-second-width;
  //margin-left: @page-width - @sidebar-first-width; /* LTR */ /* Width of content + sidebar-first. */
  //margin-right: -1 * (@page-width - @sidebar-first-width); /* LTR */ /* Negative value of .region-sidebar-second's width + left margin. */
}

.region-sidebar-second .section {
  margin: 0 15px;
  padding: 0;
}

/*
 * Footer
 */
.region-footer {
}

/*
 * Page bottom
 */
.region-bottom /* See also the #page-wrapper declaration above that this div shares. */ {
}

/*
 * Prevent overflowing content
 */
#header,
#content,
#navigation,
.region-sidebar-first,
.region-sidebar-second,
.region-footer,
.region-bottom {
  overflow: visible;
  word-wrap: break-word; /* A very nice CSS3 property */
}

/*
 * If a div.clearfix doesn't have any content after it and its bottom edge
 * touches the bottom of the viewport, Firefox and Safari will mistakenly
 * place several pixels worth of space between the bottom of the div and the
 * bottom of the viewport. Uncomment this CSS property to fix this.
 * Note: with some over-large content, this property might cause scrollbars
 * to appear on the #page-wrapper div.
 */
/*
#page-wrapper {
  overflow-y: hidden;
}
*/
